//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 20/09/2022 10:58:30 pm
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace FrontDeskApp.Data.DTO
{

    public static partial class TransactionConverter
    {

        public static TransactionDto ToDto(this FrontDeskApp.Entities.Transaction source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static TransactionDto ToDtoWithRelated(this FrontDeskApp.Entities.Transaction source, int level)
        {
            if (source == null)
              return null;

            var target = new TransactionDto();

            // Properties
            target.TransactionId = source.TransactionId;
            target.CustomerId = source.CustomerId;
            target.AreaBoxId = source.AreaBoxId;
            target.DateStored = source.DateStored;
            target.DateRetrieved = source.DateRetrieved;
            target.Status = source.Status;

            // Navigation Properties
            if (level > 0) {
              target.Customer = source.Customer.ToDtoWithRelated(level - 1);
              target.AreaBox = source.AreaBox.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static FrontDeskApp.Entities.Transaction ToEntity(this TransactionDto source)
        {
            if (source == null)
              return null;

            var target = new FrontDeskApp.Entities.Transaction();

            // Properties
            target.TransactionId = source.TransactionId;
            target.CustomerId = source.CustomerId;
            target.AreaBoxId = source.AreaBoxId;
            target.DateStored = source.DateStored;
            target.DateRetrieved = source.DateRetrieved;
            target.Status = source.Status;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<TransactionDto> ToDtos(this IEnumerable<FrontDeskApp.Entities.Transaction> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<TransactionDto> ToDtosWithRelated(this IEnumerable<FrontDeskApp.Entities.Transaction> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<FrontDeskApp.Entities.Transaction> ToEntities(this IEnumerable<TransactionDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(FrontDeskApp.Entities.Transaction source, TransactionDto target);

        static partial void OnEntityCreating(TransactionDto source, FrontDeskApp.Entities.Transaction target);

    }

}
