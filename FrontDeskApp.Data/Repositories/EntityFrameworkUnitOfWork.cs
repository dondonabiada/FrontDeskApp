//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating Repositories and a Unit of Work for EF Core model.
// Code is generated on: 20/09/2022 10:58:29 pm
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using FrontDeskApp.Entities;
using FrontDeskApp.Context;

namespace FrontDeskApp.Data
{
    public partial class EntityFrameworkUnitOfWork : IUnitOfWork
    {
        protected DbContext context = null;

        IAreaBoxRepository _AreaBoxes;

        ICustomerRepository _Customers;

        ITransactionRepository _Transactions;

        public EntityFrameworkUnitOfWork()
            : this(new FrontDeskApp.Context.FrontDeskAppDbModel())
        {
        }

        public EntityFrameworkUnitOfWork(DbContext context)
        {
            if (context == null)
            {
                throw new ArgumentNullException("context");
            }
            this.context = context;
        }

        public DbContext Context
        {
            get
            {
                return context;
            }
        }

        protected virtual void CloseContext()
        {
            if (context != null)
            {
                context.Dispose();
                context = null;
            }
        }

        #region IDisposable Methods

        private bool disposed = false;

        protected virtual void Dispose(bool disposing)
        {
            if (!this.disposed)
            {
                if (disposing)
                {
                    CloseContext();
                }
            }
            this.disposed = true;
        }

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

        #endregion

        #region IUnitOfWork Members

        public IAreaBoxRepository AreaBoxes {
          get {
            if (_AreaBoxes == null)
              _AreaBoxes = new AreaBoxRepository((FrontDeskAppDbModel)context);
            return _AreaBoxes;
          }
        }

        public ICustomerRepository Customers {
          get {
            if (_Customers == null)
              _Customers = new CustomerRepository((FrontDeskAppDbModel)context);
            return _Customers;
          }
        }

        public ITransactionRepository Transactions {
          get {
            if (_Transactions == null)
              _Transactions = new TransactionRepository((FrontDeskAppDbModel)context);
            return _Transactions;
          }
        }

        public virtual void Save()
        {
            if (context == null)
                throw new InvalidOperationException("Context has not been initialized.");
            context.SaveChanges();
        }

        #endregion
    }
}
